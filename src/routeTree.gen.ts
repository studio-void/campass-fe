/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DocumentParsingRouteImport } from './routes/document-parsing'
import { Route as WikiRouteRouteImport } from './routes/wiki/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as WikiIndexRouteImport } from './routes/wiki/index'
import { Route as DormIndexRouteImport } from './routes/dorm/index'
import { Route as DormRetirementMaintenanceRouteImport } from './routes/dorm/retirement-maintenance'
import { Route as DormRetirementFormRouteImport } from './routes/dorm/retirement-form'
import { Route as AuthVerificationRouteImport } from './routes/auth/verification'
import { Route as AuthSignUpRouteImport } from './routes/auth/sign-up'
import { Route as AuthSignInRouteImport } from './routes/auth/sign-in'
import { Route as DormWarehouseIndexRouteImport } from './routes/dorm/warehouse/index'
import { Route as DormWarehouseFormRouteImport } from './routes/dorm/warehouse/form'
import { Route as AuthGoogleCallbackRouteImport } from './routes/auth/google/callback'

const DocumentParsingRoute = DocumentParsingRouteImport.update({
  id: '/document-parsing',
  path: '/document-parsing',
  getParentRoute: () => rootRouteImport,
} as any)
const WikiRouteRoute = WikiRouteRouteImport.update({
  id: '/wiki',
  path: '/wiki',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const WikiIndexRoute = WikiIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => WikiRouteRoute,
} as any)
const DormIndexRoute = DormIndexRouteImport.update({
  id: '/dorm/',
  path: '/dorm/',
  getParentRoute: () => rootRouteImport,
} as any)
const DormRetirementMaintenanceRoute =
  DormRetirementMaintenanceRouteImport.update({
    id: '/dorm/retirement-maintenance',
    path: '/dorm/retirement-maintenance',
    getParentRoute: () => rootRouteImport,
  } as any)
const DormRetirementFormRoute = DormRetirementFormRouteImport.update({
  id: '/dorm/retirement-form',
  path: '/dorm/retirement-form',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthVerificationRoute = AuthVerificationRouteImport.update({
  id: '/auth/verification',
  path: '/auth/verification',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignUpRoute = AuthSignUpRouteImport.update({
  id: '/auth/sign-up',
  path: '/auth/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/auth/sign-in',
  path: '/auth/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const DormWarehouseIndexRoute = DormWarehouseIndexRouteImport.update({
  id: '/dorm/warehouse/',
  path: '/dorm/warehouse/',
  getParentRoute: () => rootRouteImport,
} as any)
const DormWarehouseFormRoute = DormWarehouseFormRouteImport.update({
  id: '/dorm/warehouse/form',
  path: '/dorm/warehouse/form',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthGoogleCallbackRoute = AuthGoogleCallbackRouteImport.update({
  id: '/auth/google/callback',
  path: '/auth/google/callback',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/wiki': typeof WikiRouteRouteWithChildren
  '/document-parsing': typeof DocumentParsingRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/auth/verification': typeof AuthVerificationRoute
  '/dorm/retirement-form': typeof DormRetirementFormRoute
  '/dorm/retirement-maintenance': typeof DormRetirementMaintenanceRoute
  '/dorm': typeof DormIndexRoute
  '/wiki/': typeof WikiIndexRoute
  '/auth/google/callback': typeof AuthGoogleCallbackRoute
  '/dorm/warehouse/form': typeof DormWarehouseFormRoute
  '/dorm/warehouse': typeof DormWarehouseIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/document-parsing': typeof DocumentParsingRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/auth/verification': typeof AuthVerificationRoute
  '/dorm/retirement-form': typeof DormRetirementFormRoute
  '/dorm/retirement-maintenance': typeof DormRetirementMaintenanceRoute
  '/dorm': typeof DormIndexRoute
  '/wiki': typeof WikiIndexRoute
  '/auth/google/callback': typeof AuthGoogleCallbackRoute
  '/dorm/warehouse/form': typeof DormWarehouseFormRoute
  '/dorm/warehouse': typeof DormWarehouseIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/wiki': typeof WikiRouteRouteWithChildren
  '/document-parsing': typeof DocumentParsingRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/auth/verification': typeof AuthVerificationRoute
  '/dorm/retirement-form': typeof DormRetirementFormRoute
  '/dorm/retirement-maintenance': typeof DormRetirementMaintenanceRoute
  '/dorm/': typeof DormIndexRoute
  '/wiki/': typeof WikiIndexRoute
  '/auth/google/callback': typeof AuthGoogleCallbackRoute
  '/dorm/warehouse/form': typeof DormWarehouseFormRoute
  '/dorm/warehouse/': typeof DormWarehouseIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/wiki'
    | '/document-parsing'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/auth/verification'
    | '/dorm/retirement-form'
    | '/dorm/retirement-maintenance'
    | '/dorm'
    | '/wiki/'
    | '/auth/google/callback'
    | '/dorm/warehouse/form'
    | '/dorm/warehouse'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/document-parsing'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/auth/verification'
    | '/dorm/retirement-form'
    | '/dorm/retirement-maintenance'
    | '/dorm'
    | '/wiki'
    | '/auth/google/callback'
    | '/dorm/warehouse/form'
    | '/dorm/warehouse'
  id:
    | '__root__'
    | '/'
    | '/wiki'
    | '/document-parsing'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/auth/verification'
    | '/dorm/retirement-form'
    | '/dorm/retirement-maintenance'
    | '/dorm/'
    | '/wiki/'
    | '/auth/google/callback'
    | '/dorm/warehouse/form'
    | '/dorm/warehouse/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  WikiRouteRoute: typeof WikiRouteRouteWithChildren
  DocumentParsingRoute: typeof DocumentParsingRoute
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
  AuthVerificationRoute: typeof AuthVerificationRoute
  DormRetirementFormRoute: typeof DormRetirementFormRoute
  DormRetirementMaintenanceRoute: typeof DormRetirementMaintenanceRoute
  DormIndexRoute: typeof DormIndexRoute
  AuthGoogleCallbackRoute: typeof AuthGoogleCallbackRoute
  DormWarehouseFormRoute: typeof DormWarehouseFormRoute
  DormWarehouseIndexRoute: typeof DormWarehouseIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/document-parsing': {
      id: '/document-parsing'
      path: '/document-parsing'
      fullPath: '/document-parsing'
      preLoaderRoute: typeof DocumentParsingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/wiki': {
      id: '/wiki'
      path: '/wiki'
      fullPath: '/wiki'
      preLoaderRoute: typeof WikiRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/wiki/': {
      id: '/wiki/'
      path: '/'
      fullPath: '/wiki/'
      preLoaderRoute: typeof WikiIndexRouteImport
      parentRoute: typeof WikiRouteRoute
    }
    '/dorm/': {
      id: '/dorm/'
      path: '/dorm'
      fullPath: '/dorm'
      preLoaderRoute: typeof DormIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dorm/retirement-maintenance': {
      id: '/dorm/retirement-maintenance'
      path: '/dorm/retirement-maintenance'
      fullPath: '/dorm/retirement-maintenance'
      preLoaderRoute: typeof DormRetirementMaintenanceRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dorm/retirement-form': {
      id: '/dorm/retirement-form'
      path: '/dorm/retirement-form'
      fullPath: '/dorm/retirement-form'
      preLoaderRoute: typeof DormRetirementFormRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/verification': {
      id: '/auth/verification'
      path: '/auth/verification'
      fullPath: '/auth/verification'
      preLoaderRoute: typeof AuthVerificationRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/auth/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dorm/warehouse/': {
      id: '/dorm/warehouse/'
      path: '/dorm/warehouse'
      fullPath: '/dorm/warehouse'
      preLoaderRoute: typeof DormWarehouseIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dorm/warehouse/form': {
      id: '/dorm/warehouse/form'
      path: '/dorm/warehouse/form'
      fullPath: '/dorm/warehouse/form'
      preLoaderRoute: typeof DormWarehouseFormRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/google/callback': {
      id: '/auth/google/callback'
      path: '/auth/google/callback'
      fullPath: '/auth/google/callback'
      preLoaderRoute: typeof AuthGoogleCallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

interface WikiRouteRouteChildren {
  WikiIndexRoute: typeof WikiIndexRoute
}

const WikiRouteRouteChildren: WikiRouteRouteChildren = {
  WikiIndexRoute: WikiIndexRoute,
}

const WikiRouteRouteWithChildren = WikiRouteRoute._addFileChildren(
  WikiRouteRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  WikiRouteRoute: WikiRouteRouteWithChildren,
  DocumentParsingRoute: DocumentParsingRoute,
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
  AuthVerificationRoute: AuthVerificationRoute,
  DormRetirementFormRoute: DormRetirementFormRoute,
  DormRetirementMaintenanceRoute: DormRetirementMaintenanceRoute,
  DormIndexRoute: DormIndexRoute,
  AuthGoogleCallbackRoute: AuthGoogleCallbackRoute,
  DormWarehouseFormRoute: DormWarehouseFormRoute,
  DormWarehouseIndexRoute: DormWarehouseIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
