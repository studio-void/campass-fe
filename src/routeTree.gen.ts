/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DocumentParsingRouteImport } from './routes/document-parsing'
import { Route as IndexRouteImport } from './routes/index'
import { Route as AuthVerificationRouteImport } from './routes/auth/verification'
import { Route as AuthSignUpRouteImport } from './routes/auth/sign-up'
import { Route as AuthSignInRouteImport } from './routes/auth/sign-in'

const DocumentParsingRoute = DocumentParsingRouteImport.update({
  id: '/document-parsing',
  path: '/document-parsing',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthVerificationRoute = AuthVerificationRouteImport.update({
  id: '/auth/verification',
  path: '/auth/verification',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignUpRoute = AuthSignUpRouteImport.update({
  id: '/auth/sign-up',
  path: '/auth/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/auth/sign-in',
  path: '/auth/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/document-parsing': typeof DocumentParsingRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/auth/verification': typeof AuthVerificationRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/document-parsing': typeof DocumentParsingRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/auth/verification': typeof AuthVerificationRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/document-parsing': typeof DocumentParsingRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/auth/verification': typeof AuthVerificationRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/document-parsing'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/auth/verification'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/document-parsing'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/auth/verification'
  id:
    | '__root__'
    | '/'
    | '/document-parsing'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/auth/verification'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  DocumentParsingRoute: typeof DocumentParsingRoute
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
  AuthVerificationRoute: typeof AuthVerificationRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/document-parsing': {
      id: '/document-parsing'
      path: '/document-parsing'
      fullPath: '/document-parsing'
      preLoaderRoute: typeof DocumentParsingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/verification': {
      id: '/auth/verification'
      path: '/auth/verification'
      fullPath: '/auth/verification'
      preLoaderRoute: typeof AuthVerificationRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/auth/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  DocumentParsingRoute: DocumentParsingRoute,
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
  AuthVerificationRoute: AuthVerificationRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
