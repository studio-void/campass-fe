/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { Route as rootRouteImport } from './routes/__root'
import { Route as DocumentParsingRouteImport } from './routes/document-parsing'
import { Route as AdminRequiredRouteImport } from './routes/_admin-required'
import { Route as WikiRouteRouteImport } from './routes/wiki/route'
import { Route as IndexRouteImport } from './routes/index'
import { Route as WikiIndexRouteImport } from './routes/wiki/index'
import { Route as TeamIndexRouteImport } from './routes/team/index'
import { Route as HomeIndexRouteImport } from './routes/home/index'
import { Route as DormIndexRouteImport } from './routes/dorm/index'
import { Route as WikiWikiIdRouteImport } from './routes/wiki/$wikiId'
import { Route as TeamDoneRouteImport } from './routes/team/done'
import { Route as TeamCalendarRouteImport } from './routes/team/calendar'
import { Route as DormCheckMaintenanceRouteImport } from './routes/dorm/check-maintenance'
import { Route as DormCheckFormRouteImport } from './routes/dorm/check-form'
import { Route as AuthVerificationRouteImport } from './routes/auth/verification'
import { Route as AuthSignUpRouteImport } from './routes/auth/sign-up'
import { Route as AuthSignInRouteImport } from './routes/auth/sign-in'
import { Route as DormStorageIndexRouteImport } from './routes/dorm/storage/index'
import { Route as AdminRequiredAdminIndexRouteImport } from './routes/_admin-required/admin/index'
import { Route as WikiWikiIdHistoryRouteImport } from './routes/wiki/$wikiId.history'
import { Route as WikiWikiIdEditRouteImport } from './routes/wiki/$wikiId.edit'
import { Route as DormStorageFormRouteImport } from './routes/dorm/storage/form'
import { Route as AuthGoogleCallbackRouteImport } from './routes/auth/google/callback'
import { Route as AdminRequiredAdminSchoolCertificateRouteImport } from './routes/_admin-required/admin/school-certificate'
import { Route as AdminRequiredAdminDormStorageRouteImport } from './routes/_admin-required/admin/dorm-storage'
import { Route as AdminRequiredAdminDormCheckRouteImport } from './routes/_admin-required/admin/dorm-check'

const DocumentParsingRoute = DocumentParsingRouteImport.update({
  id: '/document-parsing',
  path: '/document-parsing',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRequiredRoute = AdminRequiredRouteImport.update({
  id: '/_admin-required',
  getParentRoute: () => rootRouteImport,
} as any)
const WikiRouteRoute = WikiRouteRouteImport.update({
  id: '/wiki',
  path: '/wiki',
  getParentRoute: () => rootRouteImport,
} as any)
const IndexRoute = IndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any)
const WikiIndexRoute = WikiIndexRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => WikiRouteRoute,
} as any)
const TeamIndexRoute = TeamIndexRouteImport.update({
  id: '/team/',
  path: '/team/',
  getParentRoute: () => rootRouteImport,
} as any)
const HomeIndexRoute = HomeIndexRouteImport.update({
  id: '/home/',
  path: '/home/',
  getParentRoute: () => rootRouteImport,
} as any)
const DormIndexRoute = DormIndexRouteImport.update({
  id: '/dorm/',
  path: '/dorm/',
  getParentRoute: () => rootRouteImport,
} as any)
const WikiWikiIdRoute = WikiWikiIdRouteImport.update({
  id: '/$wikiId',
  path: '/$wikiId',
  getParentRoute: () => WikiRouteRoute,
} as any)
const TeamDoneRoute = TeamDoneRouteImport.update({
  id: '/team/done',
  path: '/team/done',
  getParentRoute: () => rootRouteImport,
} as any)
const TeamCalendarRoute = TeamCalendarRouteImport.update({
  id: '/team/calendar',
  path: '/team/calendar',
  getParentRoute: () => rootRouteImport,
} as any)
const DormCheckMaintenanceRoute = DormCheckMaintenanceRouteImport.update({
  id: '/dorm/check-maintenance',
  path: '/dorm/check-maintenance',
  getParentRoute: () => rootRouteImport,
} as any)
const DormCheckFormRoute = DormCheckFormRouteImport.update({
  id: '/dorm/check-form',
  path: '/dorm/check-form',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthVerificationRoute = AuthVerificationRouteImport.update({
  id: '/auth/verification',
  path: '/auth/verification',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignUpRoute = AuthSignUpRouteImport.update({
  id: '/auth/sign-up',
  path: '/auth/sign-up',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthSignInRoute = AuthSignInRouteImport.update({
  id: '/auth/sign-in',
  path: '/auth/sign-in',
  getParentRoute: () => rootRouteImport,
} as any)
const DormStorageIndexRoute = DormStorageIndexRouteImport.update({
  id: '/dorm/storage/',
  path: '/dorm/storage/',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRequiredAdminIndexRoute = AdminRequiredAdminIndexRouteImport.update({
  id: '/admin/',
  path: '/admin/',
  getParentRoute: () => AdminRequiredRoute,
} as any)
const WikiWikiIdHistoryRoute = WikiWikiIdHistoryRouteImport.update({
  id: '/history',
  path: '/history',
  getParentRoute: () => WikiWikiIdRoute,
} as any)
const WikiWikiIdEditRoute = WikiWikiIdEditRouteImport.update({
  id: '/edit',
  path: '/edit',
  getParentRoute: () => WikiWikiIdRoute,
} as any)
const DormStorageFormRoute = DormStorageFormRouteImport.update({
  id: '/dorm/storage/form',
  path: '/dorm/storage/form',
  getParentRoute: () => rootRouteImport,
} as any)
const AuthGoogleCallbackRoute = AuthGoogleCallbackRouteImport.update({
  id: '/auth/google/callback',
  path: '/auth/google/callback',
  getParentRoute: () => rootRouteImport,
} as any)
const AdminRequiredAdminSchoolCertificateRoute =
  AdminRequiredAdminSchoolCertificateRouteImport.update({
    id: '/admin/school-certificate',
    path: '/admin/school-certificate',
    getParentRoute: () => AdminRequiredRoute,
  } as any)
const AdminRequiredAdminDormStorageRoute =
  AdminRequiredAdminDormStorageRouteImport.update({
    id: '/admin/dorm-storage',
    path: '/admin/dorm-storage',
    getParentRoute: () => AdminRequiredRoute,
  } as any)
const AdminRequiredAdminDormCheckRoute =
  AdminRequiredAdminDormCheckRouteImport.update({
    id: '/admin/dorm-check',
    path: '/admin/dorm-check',
    getParentRoute: () => AdminRequiredRoute,
  } as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexRoute
  '/wiki': typeof WikiRouteRouteWithChildren
  '/document-parsing': typeof DocumentParsingRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/auth/verification': typeof AuthVerificationRoute
  '/dorm/check-form': typeof DormCheckFormRoute
  '/dorm/check-maintenance': typeof DormCheckMaintenanceRoute
  '/team/calendar': typeof TeamCalendarRoute
  '/team/done': typeof TeamDoneRoute
  '/wiki/$wikiId': typeof WikiWikiIdRouteWithChildren
  '/dorm': typeof DormIndexRoute
  '/home': typeof HomeIndexRoute
  '/team': typeof TeamIndexRoute
  '/wiki/': typeof WikiIndexRoute
  '/admin/dorm-check': typeof AdminRequiredAdminDormCheckRoute
  '/admin/dorm-storage': typeof AdminRequiredAdminDormStorageRoute
  '/admin/school-certificate': typeof AdminRequiredAdminSchoolCertificateRoute
  '/auth/google/callback': typeof AuthGoogleCallbackRoute
  '/dorm/storage/form': typeof DormStorageFormRoute
  '/wiki/$wikiId/edit': typeof WikiWikiIdEditRoute
  '/wiki/$wikiId/history': typeof WikiWikiIdHistoryRoute
  '/admin': typeof AdminRequiredAdminIndexRoute
  '/dorm/storage': typeof DormStorageIndexRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexRoute
  '/document-parsing': typeof DocumentParsingRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/auth/verification': typeof AuthVerificationRoute
  '/dorm/check-form': typeof DormCheckFormRoute
  '/dorm/check-maintenance': typeof DormCheckMaintenanceRoute
  '/team/calendar': typeof TeamCalendarRoute
  '/team/done': typeof TeamDoneRoute
  '/wiki/$wikiId': typeof WikiWikiIdRouteWithChildren
  '/dorm': typeof DormIndexRoute
  '/home': typeof HomeIndexRoute
  '/team': typeof TeamIndexRoute
  '/wiki': typeof WikiIndexRoute
  '/admin/dorm-check': typeof AdminRequiredAdminDormCheckRoute
  '/admin/dorm-storage': typeof AdminRequiredAdminDormStorageRoute
  '/admin/school-certificate': typeof AdminRequiredAdminSchoolCertificateRoute
  '/auth/google/callback': typeof AuthGoogleCallbackRoute
  '/dorm/storage/form': typeof DormStorageFormRoute
  '/wiki/$wikiId/edit': typeof WikiWikiIdEditRoute
  '/wiki/$wikiId/history': typeof WikiWikiIdHistoryRoute
  '/admin': typeof AdminRequiredAdminIndexRoute
  '/dorm/storage': typeof DormStorageIndexRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexRoute
  '/wiki': typeof WikiRouteRouteWithChildren
  '/_admin-required': typeof AdminRequiredRouteWithChildren
  '/document-parsing': typeof DocumentParsingRoute
  '/auth/sign-in': typeof AuthSignInRoute
  '/auth/sign-up': typeof AuthSignUpRoute
  '/auth/verification': typeof AuthVerificationRoute
  '/dorm/check-form': typeof DormCheckFormRoute
  '/dorm/check-maintenance': typeof DormCheckMaintenanceRoute
  '/team/calendar': typeof TeamCalendarRoute
  '/team/done': typeof TeamDoneRoute
  '/wiki/$wikiId': typeof WikiWikiIdRouteWithChildren
  '/dorm/': typeof DormIndexRoute
  '/home/': typeof HomeIndexRoute
  '/team/': typeof TeamIndexRoute
  '/wiki/': typeof WikiIndexRoute
  '/_admin-required/admin/dorm-check': typeof AdminRequiredAdminDormCheckRoute
  '/_admin-required/admin/dorm-storage': typeof AdminRequiredAdminDormStorageRoute
  '/_admin-required/admin/school-certificate': typeof AdminRequiredAdminSchoolCertificateRoute
  '/auth/google/callback': typeof AuthGoogleCallbackRoute
  '/dorm/storage/form': typeof DormStorageFormRoute
  '/wiki/$wikiId/edit': typeof WikiWikiIdEditRoute
  '/wiki/$wikiId/history': typeof WikiWikiIdHistoryRoute
  '/_admin-required/admin/': typeof AdminRequiredAdminIndexRoute
  '/dorm/storage/': typeof DormStorageIndexRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/wiki'
    | '/document-parsing'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/auth/verification'
    | '/dorm/check-form'
    | '/dorm/check-maintenance'
    | '/team/calendar'
    | '/team/done'
    | '/wiki/$wikiId'
    | '/dorm'
    | '/home'
    | '/team'
    | '/wiki/'
    | '/admin/dorm-check'
    | '/admin/dorm-storage'
    | '/admin/school-certificate'
    | '/auth/google/callback'
    | '/dorm/storage/form'
    | '/wiki/$wikiId/edit'
    | '/wiki/$wikiId/history'
    | '/admin'
    | '/dorm/storage'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/document-parsing'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/auth/verification'
    | '/dorm/check-form'
    | '/dorm/check-maintenance'
    | '/team/calendar'
    | '/team/done'
    | '/wiki/$wikiId'
    | '/dorm'
    | '/home'
    | '/team'
    | '/wiki'
    | '/admin/dorm-check'
    | '/admin/dorm-storage'
    | '/admin/school-certificate'
    | '/auth/google/callback'
    | '/dorm/storage/form'
    | '/wiki/$wikiId/edit'
    | '/wiki/$wikiId/history'
    | '/admin'
    | '/dorm/storage'
  id:
    | '__root__'
    | '/'
    | '/wiki'
    | '/_admin-required'
    | '/document-parsing'
    | '/auth/sign-in'
    | '/auth/sign-up'
    | '/auth/verification'
    | '/dorm/check-form'
    | '/dorm/check-maintenance'
    | '/team/calendar'
    | '/team/done'
    | '/wiki/$wikiId'
    | '/dorm/'
    | '/home/'
    | '/team/'
    | '/wiki/'
    | '/_admin-required/admin/dorm-check'
    | '/_admin-required/admin/dorm-storage'
    | '/_admin-required/admin/school-certificate'
    | '/auth/google/callback'
    | '/dorm/storage/form'
    | '/wiki/$wikiId/edit'
    | '/wiki/$wikiId/history'
    | '/_admin-required/admin/'
    | '/dorm/storage/'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexRoute: typeof IndexRoute
  WikiRouteRoute: typeof WikiRouteRouteWithChildren
  AdminRequiredRoute: typeof AdminRequiredRouteWithChildren
  DocumentParsingRoute: typeof DocumentParsingRoute
  AuthSignInRoute: typeof AuthSignInRoute
  AuthSignUpRoute: typeof AuthSignUpRoute
  AuthVerificationRoute: typeof AuthVerificationRoute
  DormCheckFormRoute: typeof DormCheckFormRoute
  DormCheckMaintenanceRoute: typeof DormCheckMaintenanceRoute
  TeamCalendarRoute: typeof TeamCalendarRoute
  TeamDoneRoute: typeof TeamDoneRoute
  DormIndexRoute: typeof DormIndexRoute
  HomeIndexRoute: typeof HomeIndexRoute
  TeamIndexRoute: typeof TeamIndexRoute
  AuthGoogleCallbackRoute: typeof AuthGoogleCallbackRoute
  DormStorageFormRoute: typeof DormStorageFormRoute
  DormStorageIndexRoute: typeof DormStorageIndexRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/document-parsing': {
      id: '/document-parsing'
      path: '/document-parsing'
      fullPath: '/document-parsing'
      preLoaderRoute: typeof DocumentParsingRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_admin-required': {
      id: '/_admin-required'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof AdminRequiredRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/wiki': {
      id: '/wiki'
      path: '/wiki'
      fullPath: '/wiki'
      preLoaderRoute: typeof WikiRouteRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/wiki/': {
      id: '/wiki/'
      path: '/'
      fullPath: '/wiki/'
      preLoaderRoute: typeof WikiIndexRouteImport
      parentRoute: typeof WikiRouteRoute
    }
    '/team/': {
      id: '/team/'
      path: '/team'
      fullPath: '/team'
      preLoaderRoute: typeof TeamIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/home/': {
      id: '/home/'
      path: '/home'
      fullPath: '/home'
      preLoaderRoute: typeof HomeIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dorm/': {
      id: '/dorm/'
      path: '/dorm'
      fullPath: '/dorm'
      preLoaderRoute: typeof DormIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/wiki/$wikiId': {
      id: '/wiki/$wikiId'
      path: '/$wikiId'
      fullPath: '/wiki/$wikiId'
      preLoaderRoute: typeof WikiWikiIdRouteImport
      parentRoute: typeof WikiRouteRoute
    }
    '/team/done': {
      id: '/team/done'
      path: '/team/done'
      fullPath: '/team/done'
      preLoaderRoute: typeof TeamDoneRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/team/calendar': {
      id: '/team/calendar'
      path: '/team/calendar'
      fullPath: '/team/calendar'
      preLoaderRoute: typeof TeamCalendarRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dorm/check-maintenance': {
      id: '/dorm/check-maintenance'
      path: '/dorm/check-maintenance'
      fullPath: '/dorm/check-maintenance'
      preLoaderRoute: typeof DormCheckMaintenanceRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dorm/check-form': {
      id: '/dorm/check-form'
      path: '/dorm/check-form'
      fullPath: '/dorm/check-form'
      preLoaderRoute: typeof DormCheckFormRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/verification': {
      id: '/auth/verification'
      path: '/auth/verification'
      fullPath: '/auth/verification'
      preLoaderRoute: typeof AuthVerificationRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-up': {
      id: '/auth/sign-up'
      path: '/auth/sign-up'
      fullPath: '/auth/sign-up'
      preLoaderRoute: typeof AuthSignUpRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/sign-in': {
      id: '/auth/sign-in'
      path: '/auth/sign-in'
      fullPath: '/auth/sign-in'
      preLoaderRoute: typeof AuthSignInRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/dorm/storage/': {
      id: '/dorm/storage/'
      path: '/dorm/storage'
      fullPath: '/dorm/storage'
      preLoaderRoute: typeof DormStorageIndexRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_admin-required/admin/': {
      id: '/_admin-required/admin/'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof AdminRequiredAdminIndexRouteImport
      parentRoute: typeof AdminRequiredRoute
    }
    '/wiki/$wikiId/history': {
      id: '/wiki/$wikiId/history'
      path: '/history'
      fullPath: '/wiki/$wikiId/history'
      preLoaderRoute: typeof WikiWikiIdHistoryRouteImport
      parentRoute: typeof WikiWikiIdRoute
    }
    '/wiki/$wikiId/edit': {
      id: '/wiki/$wikiId/edit'
      path: '/edit'
      fullPath: '/wiki/$wikiId/edit'
      preLoaderRoute: typeof WikiWikiIdEditRouteImport
      parentRoute: typeof WikiWikiIdRoute
    }
    '/dorm/storage/form': {
      id: '/dorm/storage/form'
      path: '/dorm/storage/form'
      fullPath: '/dorm/storage/form'
      preLoaderRoute: typeof DormStorageFormRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/auth/google/callback': {
      id: '/auth/google/callback'
      path: '/auth/google/callback'
      fullPath: '/auth/google/callback'
      preLoaderRoute: typeof AuthGoogleCallbackRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/_admin-required/admin/school-certificate': {
      id: '/_admin-required/admin/school-certificate'
      path: '/admin/school-certificate'
      fullPath: '/admin/school-certificate'
      preLoaderRoute: typeof AdminRequiredAdminSchoolCertificateRouteImport
      parentRoute: typeof AdminRequiredRoute
    }
    '/_admin-required/admin/dorm-storage': {
      id: '/_admin-required/admin/dorm-storage'
      path: '/admin/dorm-storage'
      fullPath: '/admin/dorm-storage'
      preLoaderRoute: typeof AdminRequiredAdminDormStorageRouteImport
      parentRoute: typeof AdminRequiredRoute
    }
    '/_admin-required/admin/dorm-check': {
      id: '/_admin-required/admin/dorm-check'
      path: '/admin/dorm-check'
      fullPath: '/admin/dorm-check'
      preLoaderRoute: typeof AdminRequiredAdminDormCheckRouteImport
      parentRoute: typeof AdminRequiredRoute
    }
  }
}

interface WikiWikiIdRouteChildren {
  WikiWikiIdEditRoute: typeof WikiWikiIdEditRoute
  WikiWikiIdHistoryRoute: typeof WikiWikiIdHistoryRoute
}

const WikiWikiIdRouteChildren: WikiWikiIdRouteChildren = {
  WikiWikiIdEditRoute: WikiWikiIdEditRoute,
  WikiWikiIdHistoryRoute: WikiWikiIdHistoryRoute,
}

const WikiWikiIdRouteWithChildren = WikiWikiIdRoute._addFileChildren(
  WikiWikiIdRouteChildren,
)

interface WikiRouteRouteChildren {
  WikiWikiIdRoute: typeof WikiWikiIdRouteWithChildren
  WikiIndexRoute: typeof WikiIndexRoute
}

const WikiRouteRouteChildren: WikiRouteRouteChildren = {
  WikiWikiIdRoute: WikiWikiIdRouteWithChildren,
  WikiIndexRoute: WikiIndexRoute,
}

const WikiRouteRouteWithChildren = WikiRouteRoute._addFileChildren(
  WikiRouteRouteChildren,
)

interface AdminRequiredRouteChildren {
  AdminRequiredAdminDormCheckRoute: typeof AdminRequiredAdminDormCheckRoute
  AdminRequiredAdminDormStorageRoute: typeof AdminRequiredAdminDormStorageRoute
  AdminRequiredAdminSchoolCertificateRoute: typeof AdminRequiredAdminSchoolCertificateRoute
  AdminRequiredAdminIndexRoute: typeof AdminRequiredAdminIndexRoute
}

const AdminRequiredRouteChildren: AdminRequiredRouteChildren = {
  AdminRequiredAdminDormCheckRoute: AdminRequiredAdminDormCheckRoute,
  AdminRequiredAdminDormStorageRoute: AdminRequiredAdminDormStorageRoute,
  AdminRequiredAdminSchoolCertificateRoute:
    AdminRequiredAdminSchoolCertificateRoute,
  AdminRequiredAdminIndexRoute: AdminRequiredAdminIndexRoute,
}

const AdminRequiredRouteWithChildren = AdminRequiredRoute._addFileChildren(
  AdminRequiredRouteChildren,
)

const rootRouteChildren: RootRouteChildren = {
  IndexRoute: IndexRoute,
  WikiRouteRoute: WikiRouteRouteWithChildren,
  AdminRequiredRoute: AdminRequiredRouteWithChildren,
  DocumentParsingRoute: DocumentParsingRoute,
  AuthSignInRoute: AuthSignInRoute,
  AuthSignUpRoute: AuthSignUpRoute,
  AuthVerificationRoute: AuthVerificationRoute,
  DormCheckFormRoute: DormCheckFormRoute,
  DormCheckMaintenanceRoute: DormCheckMaintenanceRoute,
  TeamCalendarRoute: TeamCalendarRoute,
  TeamDoneRoute: TeamDoneRoute,
  DormIndexRoute: DormIndexRoute,
  HomeIndexRoute: HomeIndexRoute,
  TeamIndexRoute: TeamIndexRoute,
  AuthGoogleCallbackRoute: AuthGoogleCallbackRoute,
  DormStorageFormRoute: DormStorageFormRoute,
  DormStorageIndexRoute: DormStorageIndexRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
